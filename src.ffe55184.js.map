{"version":3,"sources":["js/refs.js","js/fetchCountries.js","js/findCountry.js","index.js"],"names":["userCountry","document","querySelector","listCountry","cardCountry","fetchCountries","searchQuery","fetch","then","response","json","result","catch","error","console","log","refs","searchCountry","userCountryText","value","toLowerCase","length","innerHTML","createCountryBlock","listMarkup","oneCountry","name","countriesArr","countryName","map","country","markup","common","join","addEventListener","_","debounce"],"mappings":";;;AAAe,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,CACXA,YAAaC,SAASC,cAAc,uBACpCC,YAAaF,SAASC,cAAc,iBACpCE,YAAaH,SAASC,cAAc,kBAHzB,QAAA,QAAA;;ACgBd,aAfc,SAASG,EAAgBC,GAE7BC,OAAAA,6CAA6CD,KACnDE,KAAKC,GACKA,EAASC,QAEnBF,KAAKG,GAGKA,GAEVC,MAAMC,IACHC,QAAQC,IAAI,WAGnB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;AC4BA,aA1CD,IAAA,EAAA,EAAA,QAAA,cAEA,EAAA,EAAA,QAAA,wBAwCC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAzCD,MAAM,YAACf,EAAD,YAAcG,EAAd,YAA2BC,GAAeY,EAAhD,QAOA,SAASC,IACDC,IAAAA,EAAkBlB,EAAYmB,MAAMC,eAEzBF,EAAAA,EAAAA,SAAAA,GACdV,KAAKG,IACFG,QAAQC,IAAIJ,GACU,IAAlBA,EAAOU,QACPlB,EAAYmB,UAAY,GACxBR,QAAQC,IAAI,kBACZQ,EAAoBZ,IAGxBa,EAAWb,KAMnB,SAASY,EAAoBZ,GACnBc,MAAAA,EAAad,EAAO,GAC1BG,QAAQC,IAAIU,GACZX,QAAQC,IAAIU,EAAWC,MAK3B,SAASF,EAAYG,GACXC,MAAAA,EAAcD,EAAaE,IAAIC,IAG3BC,OAFNjB,QAAQC,IAAIe,EAAQJ,KAAKM,yEACqDF,EAAQJ,KAAKM,oBAI/F7B,EAAYmB,UAAYM,EAAYK,KAAK,KApC7CjC,EAAYkC,iBAAiB,QAASC,EAAEC,SAASnB,EAAe;;ACLhE,aAFA,QAAA,oBAEA,QAAA","file":"src.ffe55184.js","sourceRoot":"../src","sourcesContent":["export default {\n    userCountry: document.querySelector('.user-country-input'),\n    listCountry: document.querySelector('.country-list'),\n    cardCountry: document.querySelector('.country-card')\n}","// Есть файл fetchCountries.js с дефолтным экспортом функции fetchCountries(searchQuery), возвращающей промис с массивом стран, результат запроса к API.\nexport default function fetchCountries (searchQuery){\n\n    return fetch(`https://restcountries.com/v3.1/name/${searchQuery}`)\n    .then(response => {\n        return response.json();\n    })\n    .then(result => {\n        \n        // console.log(result);\n        return result\n    })\n    .catch(error => {\n        console.log(\"error\");\n    });\n    \n}","// Есть файл fetchCountries.js с дефолтным экспортом функции fetchCountries(searchQuery), возвращающей промис с массивом стран, результат запроса к API.\n\nimport refs from './refs.js'\nconst {userCountry, listCountry, cardCountry} = refs;\nimport fetchCountries from './fetchCountries.js'\n// ===================================================\n\nuserCountry.addEventListener('input', _.debounce(searchCountry, 500));\n\n\nfunction searchCountry (){\n    let userCountryText = userCountry.value.toLowerCase()\n\n    fetchCountries(userCountryText)\n    .then(result => {\n        console.log(result);\n        if (result.length === 1) {\n            listCountry.innerHTML = '';\n            console.log(\"!!!!1 elem!!!!\");\n            createCountryBlock (result)\n        } else {\n\n        listMarkup(result)\n        }\n    })\n    \n    \n}\nfunction createCountryBlock (result){\n    const oneCountry = result[0];\n    console.log(oneCountry);\n    console.log(oneCountry.name);\n\n\n}\n\nfunction listMarkup (countriesArr){\n    const countryName = countriesArr.map(country => {\n        console.log(country.name.common);\n       const markup =`<li class=\"elem-country\"><a class=\"link-country link\" href=\"\">${country.name.common}</a></li>`\n       return markup\n    });\n   \n    listCountry.innerHTML = countryName.join(' ')\n}\n","import './sass/main.scss';\n\nimport './js/findCountry.js';"]}